/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MaliciousBidder } from "../MaliciousBidder";

export class MaliciousBidder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MaliciousBidder> {
    return super.deploy(overrides || {}) as Promise<MaliciousBidder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MaliciousBidder {
    return super.attach(address) as MaliciousBidder;
  }
  connect(signer: Signer): MaliciousBidder__factory {
    return super.connect(signer) as MaliciousBidder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MaliciousBidder {
    return new Contract(address, _abi, signerOrProvider) as MaliciousBidder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INounsAuctionHouse",
        name: "auctionHouse",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610144806100206000396000f3fe6080604052600436106100225760003560e01c806359d667a51461002e57600080fd5b3661002957fe5b600080fd5b61004161003c3660046100c9565b610043565b005b6040517f659dd2b40000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff83169063659dd2b49034906024016000604051808303818588803b1580156100ac57600080fd5b505af11580156100c0573d6000803e3d6000fd5b50505050505050565b600080604083850312156100dc57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461010057600080fd5b94602093909301359350505056fea2646970667358221220508f432d9e7647b5dee56546512dd4f941d04b796572320de834843ff8b50d8164736f6c63430008060033";
